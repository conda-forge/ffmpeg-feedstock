{% set version = "5.0.1" %} # semver: (x.y.z)
{% set x,y,z = version.split('.') %}
{% set version_ffmpeg_style = x ~ '.' ~ y if z == "0" else version %}

package:
  name: ffmpeg
  version: {{ version }}

source:
  - url: https://ffmpeg.org/releases/ffmpeg-{{ version_ffmpeg_style }}.tar.gz
    sha256: 840c012766ceb1a95ec92fcbe51d80024a74b1b3134c92c2ff64a6f8165e9059

{%- set number = 6 %}
{%- if license_family == 'gpl' %}
{%- set number = number + 100 %}
{%- endif %}

build:
  number: {{ number }}
  string: {{ license_family }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  skip: true  # [not win]
  run_exports:
  # seems to be major version compatibility
  # https://abi-laboratory.pro/tracker/timeline/ffmpeg/
    - {{ pin_subpackage('ffmpeg', max_pin='x') }}

requirements:
  build:
    - {{ compiler("c") }}          # [not win]
    - {{ compiler("cxx") }}        # [not win]
    # clangxx is required for support of the nvidia encoders and decoders
    - clangxx  # [linux64]
    - libtool      # [not win]
    - lame         # [not win]
    - make         # [not win]
    - pkg-config   # [not win]
    # osx_64 needs yasm due to https://stackoverflow.com/questions/58796267/building-for-macos-but-linking-in-object-file-built-for-free-standing
    - yasm         # [osx and x86_64]
    - nasm         # [not (osx and x86_64)]
    - {{ compiler("m2w64_c") }}    # [win]
    - {{ compiler("m2w64_cxx") }}  # [win]
      # or is it https://anaconda.org/conda-forge/m2w64-pkg-config
    - m2-pkg-config                # [win]
    - m2-bash                      # [win]
    - m2-sed                       # [win]
    - m2-grep                      # [win]
    - m2-gawk                      # [win]
    - m2-pkg-config                # [win]
    - m2-automake-wrapper          # [win]
    - m2-libtool                   # [win]
    - m2-autoconf                  # [win]
    # - m2w64-make                   # [win]
    - m2-make                      # [win]
    - m2-findutils                 # [win]
    - m2-m4                        # [win]
    # makedef uses the printf command which is provided by coreutils
    - m2-coreutils                 # [win]
  host:
    - bzip2
    - freetype
    - gnutls  # [not win]
    - libiconv  # [osx]
    - libxml2
    {% if license_family == 'gpl' %}
    - x264
    - x265
    {% endif %}
    - libvpx  # [not win]
    - zlib
    - openh264  # [not win]
    - lame  # [not win]
    - gmp  # [unix]
    - libva  # [linux and not (ppc64le or aarch64)]
    - aom
    - svt-av1
    - ffnvcodec-headers  # [linux64]

test:
  commands:
    - ffmpeg --help
    - ffmpeg -hide_banner -codecs
    - ffmpeg -hide_banner -protocols | grep "https"  # [not win]
    - ffmpeg -hide_banner -codecs | grep "libmp3lame"  # [not win]
    - ffmpeg -hide_banner -codecs | grep "DEVI.S zlib"  # [unix]
    - ffmpeg -hide_banner -codecs | grep "DEV.LS h264"  # [unix]
    - ffmpeg -hide_banner -codecs | grep "libopenh264"  # [unix]
    - ffmpeg -hide_banner -codecs | grep "vaapi"  # [linux and not (ppc64le or aarch64)]
    - ffmpeg -hide_banner -codecs | grep "libaom"  # [unix]
    - ffmpeg -hide_banner -codecs | grep "libsvtav1"  # [unix]
    # Verify dynamic libraries on all systems
    {% set ffmpeg_libs = [
        "avdevice",
        "swresample",
        "avfilter",
        "avcodec",
        "avformat",
        "swscale",
        "avutil",
    ] %}
    {% for each_ffmpeg_lib in ffmpeg_libs %}
    - test -f $PREFIX/lib/lib{{ each_ffmpeg_lib }}${SHLIB_EXT}  # [unix]
    {% endfor %}
    {%- if license_family == 'gpl' %}
    - ffmpeg -hide_banner -buildconf | grep "enable-gpl"  # [unix]
    - ffmpeg -hide_banner -codecs | grep "libx264"     # [unix]
    - ffmpeg -hide_banner -codecs | grep "libx265"     # [unix]
    - test -f $PREFIX/lib/libpostproc${SHLIB_EXT}         # [unix]
    {%- endif %}
    {%- if license_family == 'lgpl' %}
    - ffmpeg -hide_banner -buildconf | grep "disable-gpl"        # [unix]
    - test ! $(ffmpeg -hide_banner -codecs | grep "libx264")  # [unix]
    - test ! $(ffmpeg -hide_banner -codecs | grep "libx265")  # [unix]
    - test ! -f $PREFIX/lib/libpostproc${SHLIB_EXT}              # [unix]
    {%- endif %}
    # Verify nvidia codecs on linux
    {% set nvcodecs = [
        "h264_nvenc",
        "hevc_nvenc",
        "mjpeg_cuvid",
        "mpeg1_cuvid",
        "mpeg2_cuvid",
        "mpeg4_cuvid",
        "vc1_cuvid",
        "vp8_cuvid",
        "vp9_cuvid"
    ] %}
    {% for nvcodec in nvcodecs %}
    # Make sure to include a space in there to ensure we get an exact match
    - ffmpeg -hide_banner -codecs | grep " {{ nvcodec }} "  # [linux64]
    {% endfor %}

about:
  home: https://www.ffmpeg.org/
  license: GPL-2.0-or-later     # [license_family=='gpl']
  license: LGPL-2.1-or-later    # [license_family=='lgpl']
  license_file:
    - COPYING.GPLv2            # [license_family=='gpl']
    - COPYING.GPLv3            # [license_family=='gpl']
    - COPYING.LGPLv2.1         # [license_family=='lgpl']
    - COPYING.LGPLv3           # [license_family=='lgpl']
  license_family: GPL          # [license_family=='gpl']
  license_family: LGPL         # [license_family=='lgpl']
  summary: Cross-platform solution to record, convert and stream audio and video.
  dev_url: https://git.ffmpeg.org/ffmpeg.git
  doc_url: https://ffmpeg.org/documentation.html

extra:
  recipe-maintainers:
    - danielballan
    - jakirkham
    - 183amir
    - patricksnape
    - ocefpaf
    - sdvillal
    - carlodri
    - benjaminrwilson
    - matthiasdiener
    - h-vetinari
